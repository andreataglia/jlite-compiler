// Source: TA given
/* More boolean short-circuiting testing
*/

class Main {
  Void main() {
    Int k;
    Bool bool1;
    Foo foo;
    Int b;
    foo = new Foo();
    while(foo.intM(true) != b && bool1 && foo.method1()) {
      k = 1;
    }
    k = 2/1 + 4 * 5;
    bool1 = true || foo.method1();
    new Foo().bool = 4>=2 || true || 4<5 || false;
    if(foo.method1() || !foo.bool) {
      k = 0;
    } else {
      k = 1;
    } 
    while(bool1 || 4 > 5 && !foo.method1()) {
      k = 2;
    }
  }
}

class Foo {
  Int b;
  Bool bool;
  Foo f;
  Bool method1() {
    return 1 > 2;
  }
  Void method2() {
    println("Hello!");
  }
  Int intM(Bool b){
      return new Foo().f.f.b + this.b;
  }
}
